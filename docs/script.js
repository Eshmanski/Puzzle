/*! For license information please see script.js.LICENSE.txt */
(()=>{"use strict";var __webpack_modules__={"./src/Display.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Tile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tile */ \"./src/Tile.js\");\n\n\nconst defaultOptions = {\n  width: 700,\n  height: 700,\n  segmentsX: 2,\n  segmentsY: 2,\n}\n\nclass Display {\n  constructor(mediator, options = defaultOptions) {\n      const {width, height, segmentsX, segmentsY} = options;\n\n      this.isShow = false;\n      this.mediator = mediator;\n      this.imgUrl = 'https://avatarko.ru/img/kartinka/10/kot_mysh_9796.jpg',\n      this.margin = 1,\n      this.height = height;\n      this.width = width;\n  \n\n    this.elDisplay = document.createElement('div');\n    this.elDisplay.className = 'display';\n    this.elDisplay.style.cssText = `\n    height: ${height}px; \n    width: ${width}px;\n    min-width: ${width}px;\n    padding: ${this.margin}px;\n    background-image: url(\"${this.imgUrl}\");\n    background-size: ${width + this.margin*2}px ${height + this.margin*2}px;\n    `;\n    \n    this.tiles = this.createTiles(segmentsX, segmentsY);\n  }\n\n  init(rootEl) {\n    rootEl.insertAdjacentElement('afterbegin', this.elDisplay);\n    \n    this.tiles.forEach((tile) => {\n      tile.init(this.elDisplay);\n      tile.setImg(this.imgUrl, this.width, this.height);\n    });\n\n    this.elDisplay.addEventListener('mousedown', (event) => {\n      if(event.target.dataset.id + 1) {\n        const id = event.target.dataset.id;\n        const tileTarget = this.tiles[id];\n        \n        const tileNew = tileTarget.clone();\n        tileNew.changeToMovingTile(event.x, event.y);\n        tileNew.onMove();\n\n        tileTarget.hideTile();\n        \n        this.tiles.filter((_, i) => id != i).forEach(tile => {\n          tile.initSwapping(tileTarget);\n        });\n\n        document.onmouseup = () => {\n          tileTarget.showTile();\n          tileNew.disableMove();\n          tileNew.remove();\n\n          this.tiles.filter((_, i) => id != i).forEach(tile => {\n            tile.disableSwapping();\n          });\n\n          document.mouseup = null;\n        }\n      }\n    });\n\n    this.mediator.addMethod('toggleTiles', () => this.toggleTiles());\n    this.mediator.addMethod('addImage', (imgUrl) => this.setImage(imgUrl));\n    this.mediator.addMethod('splitTiles', (x, y) => this.splitTiles(x, y));\n    this.mediator.addMethod('shaflTiles', () => this.shaflTiles());\n  }\n\n  shaflTiles() {\n    const amountTiles = this.tiles.length;\n\n    this.activeTransitionAll();\n\n    for(let i = 0; i < amountTiles / 2; i++) {\n      const firstId = Math.floor(Math.random() * amountTiles);\n      const secondId = Math.floor(Math.random() * amountTiles);\n      \n      _Tile__WEBPACK_IMPORTED_MODULE_0__[\"default\"].swap(this.tiles[firstId], this.tiles[secondId]);\n    }\n\n    this.disableTransitionAll();\n  }\n\n  activeTransitionAll() {\n    this.tiles.forEach((tile) => {\n      tile.activeTransition();\n    });\n  }\n\n  disableTransitionAll() {\n\n    setTimeout(() => {\n      this.tiles.forEach((tile) => {\n        tile.disableTransition();\n      });\n    }, 500);\n\n  }\n\n  splitTiles(x, y) {\n    this.hideTiles();\n\n    this.tiles.forEach((tile) => tile.remove());\n\n    this.tiles = this.createTiles(x, y);\n\n    this.tiles.forEach((tile) => {\n      tile.init(this.elDisplay);\n      tile.setImg(this.imgUrl, this.width, this.height);\n    });\n\n    this.showTiles();\n  }\n\n  toggleTiles() {\n    this.isShow \n      ? this.hideTiles()\n      : this.showTiles();\n  }\n\n  hideTiles() {\n    this.tiles.map(tile => {\n      tile.hideTile();\n    });\n    this.isShow = false;\n    this.elDisplay.style.backgroundImage = `url(${this.imgUrl})`;\n    \n  }\n\n  showTiles() {\n    this.tiles.map(tile => {\n      tile.showTile();\n    });\n    this.isShow = true;\n    this.elDisplay.style.backgroundImage = '';\n\n  }\n\n  setImage(imgUrl) {\n    this.imgUrl = imgUrl;\n    this.isShow = false;\n    this.elDisplay.style.backgroundImage = `url(${imgUrl})`\n    this.tiles.map(tile => {\n      tile.hideTile();\n      tile.setImg(imgUrl);\n    });\n  }\n\n  createTiles(x, y) {\n    const tileWidth = this.width / x;\n    const tileHeight = this.height / y;\n\n    const tiles = new Array(x * y).fill(' ')\n      .map((tile, index) => {\n        const size = { width: tileWidth, height: tileHeight};\n        const top = Math.floor((index)/x) * tileHeight;\n        const left = ((index)%x * tileWidth);\n        const position = {top: top, left: left};\n        tile = new _Tile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n          size,\n          position,\n          id: index,\n          margin: this.margin\n        });\n\n        return tile;\n      });\n\n    return tiles;\n  }\n \n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Display);\n\n//# sourceURL=webpack://mylabs/./src/Display.js?")},"./src/Form.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n  class Form {\n    constructor(mediator) {\n      this.mediator = mediator;\n\n      this.form = document.createElement(\'div\');\n      this.form.insertAdjacentHTML(`afterbegin`,\n      `\n        <div class="drawer"><i class="fas fa-arrow-right"></i></div>\n        <h3 class="titleForm">Контроллер</h3>\n        <hr>\n        <h4 class="title">Добавить картинку</h4>\n        <form class="addImgForm">\n          <p class="validator" >.</p>\n          <input name="imgUrl" class="input" placeholder="URL картинки">\n          <button type="submit" class="btn addBtn">Добавить картинку</button>\n        </form>\n\n        <h4 class="title">Выберете кол-во сегментов</h4>\n        <form class="splitForm">\n          <p class="validator" >.</p>\n          <div>\n            <input name="splitX" class="input" placeholder="X">\n            <i class="fas fa-times"></i>\n            <input name="splitY" class="input" placeholder="Y"> \n          </div>\n          <button type="submit" class="btn splitBtn">Разбить</button>\n        </form>\n        <br>\n        <button class="btn showBtn">Показать плитки</button>\n\n        <button class="btn shaflBtn">Перемешать</button>\n      `);\n\n      this.form.className = \'Form\';\n\n      this.isShow = false;\n      this.isOpen = false;\n      this.drawer = this.form.querySelector(\'.drawer\');\n      this.addImgForm = this.form.querySelector(\'.addImgForm\');\n      this.splitForm = this.form.querySelector(\'.splitForm\');\n      this.showBtn = this.form.querySelector(\'.showBtn\');\n      this.shaflBtn = this.form.querySelector(\'.shaflBtn\');\n    }\n\n    init(rootEl) {\n      rootEl.insertAdjacentElement(\'beforeend\', this.form);\n\n      this.drawer.onclick = this.drawerSwitcher.bind(this);\n\n      this.showBtn.onclick = () => this.mediator.callMethod(\'toggleTiles\');   \n      \n      this.shaflBtn.onclick = () => this.mediator.callMethod(\'shaflTiles\'); \n\n      this.addImgForm.onsubmit = this.addImg.bind(this);\n\n      this.splitForm.onsubmit = this.setSplit.bind(this);\n\n    }\n\n    setSplit(event) {\n      event.preventDefault();\n\n      const splitX = Number(event.target.splitX.value);\n      const splitY = Number(event.target.splitY.value);\n      const validator = event.target.querySelector(\'.validator\');\n\n      \n      if(isNaN(splitX * splitY)) {\n        this.showValidator(\n          validator,\n          \'Значение должно быть числом\');\n      } else if(!(splitX > 0 && splitX < 21 && splitY > 0 && splitY < 21)) {\n        this.showValidator(\n          validator,\n          \'Значение должно быть от 1 до 20\');\n        \n      } else {\n          this.mediator.callMethod(\'splitTiles\', splitX, splitY); \n\n          event.target.splitX.value = \'\';\n          event.target.splitY.value = \'\';\n          this.hideValidator(validator);\n      }\n    }\n\n    addImg(event) {\n      event.preventDefault();\n\n      const imgUrl = event.target.imgUrl.value;\n      const validator = event.target.querySelector(\'.validator\');\n\n      if(imgUrl.match(/^https:\\/\\/\\S+\\.jpg|jpeg|png$/)) {\n        this.mediator.callMethod(\'addImage\', imgUrl);\n\n        event.target.imgUrl.value = \'\';\n        this.hideValidator(validator);\n      } else {\n        this.showValidator(\n          validator,\n          \'Введен некорректный Url\');\n      }\n    }\n\n    showValidator(validator, message) {\n      validator.textContent = message;\n      validator.style.visibility = \'visible\';\n    }\n\n    hideValidator(validator) {\n      validator.textContent = \'.\';\n      validator.style.visibility = \'hidden\';\n    }\n\n    drawerSwitcher() {\n      if(this.isOpen) { \n        this.form.style.right = \'-10px\';\n        this.drawer.innerHTML = \'<i class="fas fa-arrow-right"></i>\';\n        this.isOpen = false;\n      } else {\n        this.form.style.right = \'-215px\';\n        this.drawer.innerHTML = \'<i class="fas fa-times"></i>\';\n        this.isOpen = true;\n      }\n    }\n  }\n\n\n\n  /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Form);\n\n//# sourceURL=webpack://mylabs/./src/Form.js?')},"./src/Mediator.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass Mediator {\n  constructor() {\n    this.methodsList = {};\n  }\n\n  addMethod(nameMethod, method) {\n    this.methodsList[nameMethod] = method;\n  }\n\n  callMethod(nameMethod, ...args) {\n    this.methodsList[nameMethod](...args);\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Mediator);\n\n//# sourceURL=webpack://mylabs/./src/Mediator.js?')},"./src/Puzle.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Display__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Display */ "./src/Display.js");\n/* harmony import */ var _Form__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Form */ "./src/Form.js");\n\n\n\nclass Puzle {\n  constructor(className, mediator) {\n    this.mediator = mediator;\n    this.$el = document.createElement(\'div\');\n    this.$el.className = \'app\'\n    this.root = document.querySelector(className);\n  }\n\n  init() {\n    const display = new _Display__WEBPACK_IMPORTED_MODULE_0__["default"](this.mediator);\n    display.init(this.$el);\n\n    const form = new _Form__WEBPACK_IMPORTED_MODULE_1__["default"](this.mediator);\n    form.init(this.$el);\n\n    this.root.insertAdjacentElement(\'afterbegin\', this.$el)\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Puzle);\n\n//# sourceURL=webpack://mylabs/./src/Puzle.js?')},"./src/Tile.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nwindow.pos = []\nclass Tile {\n  constructor({ position, size, id, margin }, el = null) {\n    pos.push(position)\n    this.position = position;\n    this.size = size;\n    this.id = id;\n    this.margin = margin;\n    \n    if(!el) {\n      this.elTile = document.createElement('div');\n\n      const style = `\n      width: ${size.width - margin*2}px; \n      height: ${size.height - margin*2}px; \n      margin: ${margin}px;\n      top: ${position.top}px; \n      left: ${position.left}px;\n      pointer-events: none;\n      `\n\n      this.elTile.style.cssText = style.trim();\n      this.elTile.className = 'tile';\n      this.elTile.dataset.id = id;\n    } else {\n      this.elTile = el.cloneNode(true);\n    }\n  }\n\n  init(rootEl) {\n    rootEl.insertAdjacentElement('afterbegin', this.elTile);\n  }\n\n  setImg(imgUrl, width, height) {\n    this.elTile.style.backgroundImage = `url(${imgUrl})`;\n    this.elTile.style.backgroundSize = `${width + this.margin*2}px ${height + this.margin*2}px`;\n    this.elTile.style.backgroundPosition = `-${this.position.left + this.margin}px -${this.position.top + this.margin}px`;\n  }\n\n  hideTile() {\n    this.elTile.style.visibility = 'hidden';\n    this.elTile.style.pointerEvents = 'none';\n  }\n\n  showTile() {\n    this.elTile.style.visibility = 'visible';\n    this.elTile.style.pointerEvents = 'auto';\n  }\n\n  clone() {\n    return new Tile({\n      position: {...this.position}, \n      size: {...this.size},\n      id: this.id,\n      margin: this.margin,\n    }, this.elTile);\n  }\n\n  changeToMovingTile(x, y) {\n    const body = document.querySelector('body');\n    body.insertAdjacentElement('afterbegin', this.elTile);\n    this.elTile.style.zIndex = 99;\n    this.elTile.style.pointerEvents = 'none';\n    this.position.top = (y - this.elTile.offsetHeight / 2);\n    this.position.left = (x - this.elTile.offsetWidth / 2);\n    this.render();\n  }\n\n  activeTransition() {\n    this.elTile.style.transition = 'all 0.5s ease-in-out';\n  }\n\n  disableTransition() {\n    this.elTile.style.transition = '';\n  }\n\n  initSwapping(tile) {\n    this.activeTransition();\n          \n    this.elTile.onmouseenter = (event) => {\n      Tile.swap(tile, this);\n    }\n  }\n\n  disableSwapping() {\n    this.disableTransition();\n    this.elTile.onmouseenter = null;\n  }\n\n  static swap(tileA, tileB) {\n    const buff = tileA.position;\n    tileA.position = tileB.position;\n    tileB.position = buff;\n\n    tileA.render();\n    tileB.render();\n  }\n\n  render() {\n    this.elTile.style.top = this.position.top + 'px';\n    this.elTile.style.left = this.position.left + 'px';\n   \n  }\n\n  onMove() {\n    let {left: lastLeft, top: lastTop} = { ...this.position };\n\n    document.onmousemove = (event) => {\n      setTimeout(() => {\n        const top = (event.y - this.elTile.offsetHeight / 2);\n        const left = (event.x - this.elTile.offsetWidth / 2);\n\n        const deltaY = top - lastTop;\n        const deltaX = left - lastLeft;\n\n        if(deltaY < -1 || deltaY > 1 || deltaX < -1 || deltaX > 1) {\n          this.position.top = top;\n          lastTop = top;\n\n          this.position.left = left;\n          lastLeft = left;\n\n          this.render();\n        }\n      }, 50);      \n    } \n  }\n\n  disableMove() {\n    document.onmousemove = null;\n  }\n  \n  remove() {\n    this.elTile.remove();\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Tile);\n\n//# sourceURL=webpack://mylabs/./src/Tile.js?")},"./src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Puzle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Puzle */ "./src/Puzle.js");\n/* harmony import */ var _Mediator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Mediator */ "./src/Mediator.js");\n\n\n\nconst mediator = new _Mediator__WEBPACK_IMPORTED_MODULE_1__["default"]();\n\nconst puzle = new _Puzle__WEBPACK_IMPORTED_MODULE_0__["default"](\'.root\', mediator);\npuzle.init();\n\n//# sourceURL=webpack://mylabs/./src/index.js?')}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__webpack_require__),n.exports}__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/index.js")})();